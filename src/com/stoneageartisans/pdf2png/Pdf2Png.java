package com.stoneageartisans.pdf2png;

import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.rendering.PDFRenderer;

public class Pdf2Png extends JFrame
{
    public static final int RENDER_DPI = 100; // 72 is the default and doesn't look so great
    
    public static final String FILE_SEPARATOR     = System.getProperty("file.separator");
    public static final String SELECT_PATH_FILE   = "select_path.txt";
    public static final String OUTPUT_PATH_FILE   = "output_path.txt";
    
    private String selectPath;
    private String filePath;
    private String outputPath;
    
    public Pdf2Png()
    {
        initComponents();
        initialize();
    }
    
    private void disableButtons()
    {
        jButton_selectPdfFile.setEnabled(false);
        jButton_selectPath.setEnabled(false);
        jButton_convertFile.setEnabled(false);
    }
    
    private void enableButtons()
    {
        jButton_selectPdfFile.setEnabled(true);
        jButton_selectPath.setEnabled(true);
        jButton_convertFile.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel_selectFile = new javax.swing.JPanel();
        jLabel_pdfFile = new javax.swing.JLabel();
        jTextField_pdfFile = new javax.swing.JTextField();
        jButton_selectPdfFile = new javax.swing.JButton();
        jPanel_convertFile = new javax.swing.JPanel();
        jButton_convertFile = new javax.swing.JButton();
        jLabel_fileWarning = new javax.swing.JLabel();
        jPanel_selectOutput = new javax.swing.JPanel();
        jLabel_outputPath = new javax.swing.JLabel();
        jTextField_outputPath = new javax.swing.JTextField();
        jButton_selectPath = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LifespanVL - Pdf2Png");

        jLabel_pdfFile.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel_pdfFile.setText("Pdf file:");

        jTextField_pdfFile.setColumns(40);
        jTextField_pdfFile.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField_pdfFile.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                jTextField_pdfFileFocusGained(evt);
            }
        });

        jButton_selectPdfFile.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton_selectPdfFile.setText("Select");
        jButton_selectPdfFile.setMaximumSize(new java.awt.Dimension(90, 35));
        jButton_selectPdfFile.setMinimumSize(new java.awt.Dimension(90, 35));
        jButton_selectPdfFile.setPreferredSize(new java.awt.Dimension(90, 35));
        jButton_selectPdfFile.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton_selectPdfFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_selectFileLayout = new javax.swing.GroupLayout(jPanel_selectFile);
        jPanel_selectFile.setLayout(jPanel_selectFileLayout);
        jPanel_selectFileLayout.setHorizontalGroup(
            jPanel_selectFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_selectFileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_selectFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_selectFileLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jTextField_pdfFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_selectPdfFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel_pdfFile))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_selectFileLayout.setVerticalGroup(
            jPanel_selectFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_selectFileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_pdfFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_selectFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_pdfFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_selectPdfFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton_convertFile.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton_convertFile.setText("Convert");
        jButton_convertFile.setMaximumSize(new java.awt.Dimension(90, 35));
        jButton_convertFile.setMinimumSize(new java.awt.Dimension(90, 35));
        jButton_convertFile.setPreferredSize(new java.awt.Dimension(90, 35));
        jButton_convertFile.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton_convertFileActionPerformed(evt);
            }
        });

        jLabel_fileWarning.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel_fileWarning.setForeground(new java.awt.Color(255, 0, 0));
        jLabel_fileWarning.setText("No pdf file was selected");

        javax.swing.GroupLayout jPanel_convertFileLayout = new javax.swing.GroupLayout(jPanel_convertFile);
        jPanel_convertFile.setLayout(jPanel_convertFileLayout);
        jPanel_convertFileLayout.setHorizontalGroup(
            jPanel_convertFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_convertFileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton_convertFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel_fileWarning)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_convertFileLayout.setVerticalGroup(
            jPanel_convertFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_convertFileLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_convertFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_convertFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_fileWarning))
                .addContainerGap())
        );

        jLabel_outputPath.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel_outputPath.setText("Output path:");

        jTextField_outputPath.setColumns(40);
        jTextField_outputPath.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jButton_selectPath.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton_selectPath.setText("Select");
        jButton_selectPath.setMaximumSize(new java.awt.Dimension(90, 35));
        jButton_selectPath.setMinimumSize(new java.awt.Dimension(90, 35));
        jButton_selectPath.setPreferredSize(new java.awt.Dimension(90, 35));
        jButton_selectPath.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton_selectPathActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_selectOutputLayout = new javax.swing.GroupLayout(jPanel_selectOutput);
        jPanel_selectOutput.setLayout(jPanel_selectOutputLayout);
        jPanel_selectOutputLayout.setHorizontalGroup(
            jPanel_selectOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_selectOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_selectOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_selectOutputLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jTextField_outputPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_selectPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel_outputPath))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_selectOutputLayout.setVerticalGroup(
            jPanel_selectOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_selectOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_outputPath)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_selectOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_outputPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_selectPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel_selectFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_selectOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_convertFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_selectFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_selectOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_convertFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     * @throws javax.swing.UnsupportedLookAndFeelException
     */
    public static void main(String[] args) throws UnsupportedLookAndFeelException
    {
        try
        {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch(ClassNotFoundException | InstantiationException | IllegalAccessException ex)
        {
            // TODO
        }

        java.awt.EventQueue.invokeLater(
                new Runnable()
                {
                    @Override
                    public void run()
                    {
                        new Pdf2Png().setVisible(true);
                    }
                }
        );
    }
    
    private void convert()
    {
        try
        {
            File file = new File(jTextField_pdfFile.getText());
            
            if(file.exists())
            {
                PDDocument document = PDDocument.load(file);                
                PDFRenderer renderer = new PDFRenderer(document);                
                int pageCount = document.getNumberOfPages();
                
                for(int page = 0; page < pageCount; page ++)
                {
                    disableButtons();
                    BufferedImage image = renderer.renderImageWithDPI(page, RENDER_DPI);
                    ImageIO.write(image, "PNG", new File(outputPath + "page_" + (page + 1) + ".png"));
                }
                
                document.close();
            }
            else
            {
                Logger.log("ERROR: File '" + jTextField_pdfFile.getText() + "' does not exist.");
            }
        }
        catch(IOException ex)
        {
            Logger.log("ERROR: Unable to open '" + jTextField_pdfFile.getText() + "' file.");
        }
    }
    
    private void initialize()
    {
        jLabel_fileWarning.setVisible(false);
        
        selectPath = loadPath(SELECT_PATH_FILE);
        outputPath = loadPath(OUTPUT_PATH_FILE);
        
        filePath = "";
    }
    
    private String loadPath(String pathFile)
    {
        String path = "";        
        BufferedReader reader;
        
        try
        {
            reader = new BufferedReader(new FileReader(pathFile));
            path = reader.readLine();
            if(path == null)
            {
                path = "";
            }
            reader.close();
        }
        catch(IOException ex)
        {
            Logger.log("ERROR: Unable to open '" + pathFile + "' file.");
        }
        
        return path;
    }
    
    private void savePdfPath()
    {
        String[] pathTokens = jTextField_pdfFile.getText().split(Pattern.quote(FILE_SEPARATOR));        
        selectPath = "";
        
        for(int i = 0; i < (pathTokens.length - 1); i ++)
        {
            selectPath += pathTokens[i];
            selectPath += FILE_SEPARATOR;
        }
        
        BufferedWriter writer;
        
        try
        {
            writer = new BufferedWriter(new FileWriter(SELECT_PATH_FILE));
            writer.write(selectPath);
            writer.close();
        }
        catch(IOException ex)
        {
            Logger.log("ERROR: Unable to open '" + SELECT_PATH_FILE + "' file.");
        }
    }
    
    private void saveOutputPath()
    {
        BufferedWriter writer;
        
        try
        {
            writer = new BufferedWriter(new FileWriter(OUTPUT_PATH_FILE));
            writer.write(outputPath);
            writer.close();
        }
        catch(IOException ex)
        {
            Logger.log("ERROR: Unable to open '" + OUTPUT_PATH_FILE + "' file.");
        }
    }
    
    private void jButton_selectPdfFileActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton_selectPdfFileActionPerformed
    {//GEN-HEADEREND:event_jButton_selectPdfFileActionPerformed
        jLabel_fileWarning.setVisible(false);
        
        JFileChooser fileChooser;
        
        if(selectPath.isEmpty())
        {
            fileChooser = new JFileChooser();
        }
        else
        {
            fileChooser = new JFileChooser(selectPath);
        }
        
        fileChooser.setDialogTitle("Select .pdf File");

        if(fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION)
        {
            filePath = fileChooser.getSelectedFile().getAbsolutePath();
            
            jTextField_pdfFile.setText(filePath);
            
            savePdfPath();
        }
    }//GEN-LAST:event_jButton_selectPdfFileActionPerformed

    private void jButton_convertFileActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton_convertFileActionPerformed
    {//GEN-HEADEREND:event_jButton_convertFileActionPerformed
        String file = jTextField_pdfFile.getText();
        
        if(file.isEmpty())
        {
            jLabel_fileWarning.setVisible(true);
        }
        else
        {
            convert();
        }
    }//GEN-LAST:event_jButton_convertFileActionPerformed

    private void jTextField_pdfFileFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_jTextField_pdfFileFocusGained
    {//GEN-HEADEREND:event_jTextField_pdfFileFocusGained
        jLabel_fileWarning.setVisible(false);
    }//GEN-LAST:event_jTextField_pdfFileFocusGained

    private void jButton_selectPathActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton_selectPathActionPerformed
    {//GEN-HEADEREND:event_jButton_selectPathActionPerformed
        JFileChooser fileChooser;
        
        if(outputPath.isEmpty())
        {
            fileChooser = new JFileChooser();
        }
        else
        {
            fileChooser = new JFileChooser(outputPath);
        }
        
        fileChooser.setDialogTitle("Select Output Directory");
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileChooser.setAcceptAllFileFilterUsed(false);

        if(fileChooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION)
        {
            outputPath = fileChooser.getSelectedFile().getAbsolutePath();
            outputPath += FILE_SEPARATOR;
            
            jTextField_outputPath.setText(outputPath);
            
            saveOutputPath();
        }
    }//GEN-LAST:event_jButton_selectPathActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_convertFile;
    private javax.swing.JButton jButton_selectPath;
    private javax.swing.JButton jButton_selectPdfFile;
    private javax.swing.JLabel jLabel_fileWarning;
    private javax.swing.JLabel jLabel_outputPath;
    private javax.swing.JLabel jLabel_pdfFile;
    private javax.swing.JPanel jPanel_convertFile;
    private javax.swing.JPanel jPanel_selectFile;
    private javax.swing.JPanel jPanel_selectOutput;
    private javax.swing.JTextField jTextField_outputPath;
    private javax.swing.JTextField jTextField_pdfFile;
    // End of variables declaration//GEN-END:variables
}
